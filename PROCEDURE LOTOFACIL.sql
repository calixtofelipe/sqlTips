CREATE OR REPLACE PROCEDURE SANKHYA.STP_LOTOFACIL
AS

    P_VALOR VARCHAR2(100 BYTE);
    P_DEZENA1                 NUMBER; 
    P_DEZENA2                 NUMBER; 
    P_DEZENA3                 NUMBER; 
    P_DEZENA4                 NUMBER; 
    P_DEZENA5                 NUMBER; 
    P_DEZENA6                 NUMBER; 
    P_DEZENA7                 NUMBER; 
    P_DEZENA8                 NUMBER; 
    P_DEZENA9                 NUMBER; 
    P_DEZENA10                 NUMBER; 
    P_DEZENA11                 NUMBER; 
    P_DEZENA12                 NUMBER; 
    P_DEZENA13                 NUMBER; 
    P_DEZENA14                 NUMBER; 
    P_DEZENA15                 NUMBER;
    P_JACAIU                   NUMBER;
    
    --SORTEIO
    P_NROSORTEIO        INT;

BEGIN



 --GERAR DEZENAS
 SELECT ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)),
        ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)),
        ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)),
        ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)),
        ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25))
        INTO P_DEZENA1, P_DEZENA2, P_DEZENA3,
             P_DEZENA4, P_DEZENA5, P_DEZENA6,
             P_DEZENA7, P_DEZENA8, P_DEZENA9,
             P_DEZENA10,P_DEZENA11,P_DEZENA12,
             P_DEZENA13,P_DEZENA14,P_DEZENA15
   FROM DUAL;
 
  --ORDENA AS DEZENAS
    select *  INTO P_DEZENA1, P_DEZENA2, P_DEZENA3,
             P_DEZENA4, P_DEZENA5, P_DEZENA6,
             P_DEZENA7, P_DEZENA8, P_DEZENA9,
             P_DEZENA10,P_DEZENA11,P_DEZENA12,
             P_DEZENA13,P_DEZENA14,P_DEZENA15
    from (
SELECT *
  FROM (
SELECT VALUE AS DEZENAS, ROWNUM AS ORDEM
 FROM (
select value
from
(
    (
        select
            P_DEZENA1 v1,
            P_DEZENA2 v2,
            P_DEZENA3 v3,
            P_DEZENA4 v4,
            P_DEZENA5 v5,
            P_DEZENA6 v6,
            P_DEZENA7 v7,
            P_DEZENA8 v8,
            P_DEZENA9 v9,
            P_DEZENA10 v10,
            P_DEZENA11 v11,
            P_DEZENA12 v12,
            P_DEZENA13 v13,
            P_DEZENA14 v14,
            P_DEZENA15 v15
        FROM dual
    )
    unpivot
    (
        value
        for value_type in
            (v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15) 
    ) 
) ORDER BY 1
) ))
pivot 
   (SUM(DEZENAS) DEZENA FOR (ORDEM) IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15));
   
   SELECT COUNT(1) INTO P_JACAIU 
       FROM HISTLF LF 
      WHERE DEZENA1=P_DEZENA1
        AND DEZENA2=P_DEZENA2
        AND DEZENA3=P_DEZENA3
        AND DEZENA4=P_DEZENA4
        AND DEZENA5=P_DEZENA5
        AND DEZENA6=P_DEZENA6
        AND DEZENA7=P_DEZENA7
        AND DEZENA8=P_DEZENA8
        AND DEZENA9=P_DEZENA9
        AND DEZENA10=P_DEZENA10
        AND DEZENA11=P_DEZENA11
        AND DEZENA12=P_DEZENA12
        AND DEZENA13=P_DEZENA13
        AND DEZENA14=P_DEZENA14
        AND DEZENA15=P_DEZENA15;
   
  
  WHILE 
  (     
  (P_JACAIU > 0) 
        OR
         (
  (P_DEZENA2 - P_DEZENA1)=0 OR (P_DEZENA3 - P_DEZENA2)=0 OR (P_DEZENA4 - P_DEZENA3)=0 OR
  (P_DEZENA5 - P_DEZENA4)=0 OR (P_DEZENA6 - P_DEZENA5)=0 OR (P_DEZENA7 - P_DEZENA6)=0 OR
  (P_DEZENA8 - P_DEZENA7)=0 OR (P_DEZENA9 - P_DEZENA8)=0 OR (P_DEZENA10 - P_DEZENA9)=0 OR
  (P_DEZENA11 - P_DEZENA10)=0 OR (P_DEZENA12 - P_DEZENA11)=0 OR (P_DEZENA13 - P_DEZENA12)=0 OR
  (P_DEZENA14 - P_DEZENA13)=0 OR (P_DEZENA15 - P_DEZENA14)=0
         )
         OR
         (ROUND(POWER((
     (POWER(P_DEZENA1 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA2 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA3 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA4 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA5 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA6 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA7 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA8 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA9 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA10 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA11 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA12 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA13 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA14 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA15 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2)) 
      /15),0.5),2) <  6.07)
      OR
      (ROUND(POWER((
     (POWER(P_DEZENA1 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA2 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA3 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA4 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA5 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA6 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA7 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA8 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA9 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA10 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA11 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA12 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA13 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA14 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA15 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2)) 
      /15),0.5),2) >  8.26)
      )
      
 LOOP  
     IF (
  (P_DEZENA2 - P_DEZENA1)=0 OR (P_DEZENA3 - P_DEZENA2)=0 OR (P_DEZENA4 - P_DEZENA3)=0 OR
  (P_DEZENA5 - P_DEZENA4)=0 OR (P_DEZENA6 - P_DEZENA5)=0 OR (P_DEZENA7 - P_DEZENA6)=0 OR
  (P_DEZENA8 - P_DEZENA7)=0 OR (P_DEZENA9 - P_DEZENA8)=0 OR (P_DEZENA10 - P_DEZENA9)=0 OR
  (P_DEZENA11 - P_DEZENA10)=0 OR (P_DEZENA12 - P_DEZENA11)=0 OR (P_DEZENA13 - P_DEZENA12)=0 OR
  (P_DEZENA14 - P_DEZENA13)=0 OR (P_DEZENA15 - P_DEZENA14)=0
         ) THEN
          --GERAR DEZENAS
          IF (P_DEZENA2 - P_DEZENA1)=0 THEN
          P_DEZENA2:= ROUND(DBMS_RANDOM.VALUE(1,25));
          END IF;
          
          IF (P_DEZENA2 - P_DEZENA3)=0 THEN
          P_DEZENA3:= ROUND(DBMS_RANDOM.VALUE(1,25));
          END IF;
          
          IF (P_DEZENA4 - P_DEZENA3)=0 THEN
          P_DEZENA4:= ROUND(DBMS_RANDOM.VALUE(1,25));
          END IF;
          
          IF (P_DEZENA4 - P_DEZENA5)=0 THEN
          P_DEZENA5:= ROUND(DBMS_RANDOM.VALUE(1,25));
          END IF;
          
          IF (P_DEZENA5 - P_DEZENA6)=0 THEN
          P_DEZENA6:= ROUND(DBMS_RANDOM.VALUE(1,25));
          END IF;
          
          IF (P_DEZENA6 - P_DEZENA7)=0 THEN
          P_DEZENA7:= ROUND(DBMS_RANDOM.VALUE(1,25));
          END IF;
          
          IF (P_DEZENA7 - P_DEZENA8)=0 THEN
          P_DEZENA8:= ROUND(DBMS_RANDOM.VALUE(1,25));
          END IF;
          
          IF (P_DEZENA8 - P_DEZENA9)=0 THEN
          P_DEZENA9:= ROUND(DBMS_RANDOM.VALUE(1,25));
          END IF;
          
          IF (P_DEZENA9 - P_DEZENA10)=0 THEN
          P_DEZENA10:= ROUND(DBMS_RANDOM.VALUE(1,25));
          END IF;
          
          IF (P_DEZENA10 - P_DEZENA11)=0 THEN
          P_DEZENA11:= ROUND(DBMS_RANDOM.VALUE(1,25));
          END IF;
          
          IF (P_DEZENA11 - P_DEZENA12)=0 THEN
          P_DEZENA12:= ROUND(DBMS_RANDOM.VALUE(1,25));
          END IF;
          
          IF (P_DEZENA12 - P_DEZENA13)=0 THEN
          P_DEZENA13:= ROUND(DBMS_RANDOM.VALUE(1,25));
          END IF;
          
          IF (P_DEZENA13 - P_DEZENA14)=0 THEN
          P_DEZENA14:= ROUND(DBMS_RANDOM.VALUE(1,25));
          END IF;
          
          IF (P_DEZENA14 - P_DEZENA15)=0 THEN
          P_DEZENA15:= ROUND(DBMS_RANDOM.VALUE(1,25));
          END IF;
          
          
     END IF;     
     
     IF (P_JACAIU > 0 )
     OR
         (ROUND(POWER((
     (POWER(P_DEZENA1 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA2 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA3 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA4 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA5 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA6 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA7 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA8 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA9 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA10 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA11 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA12 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA13 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA14 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA15 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2)) 
      /15),0.5),2) <  6.07)
      OR
      (ROUND(POWER((
     (POWER(P_DEZENA1 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA2 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA3 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA4 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA5 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA6 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA7 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA8 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA9 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA10 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA11 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA12 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA13 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA14 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2) +
      POWER(P_DEZENA15 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5 + 
                        P_DEZENA6 + P_DEZENA7 + P_DEZENA8 + P_DEZENA9 + P_DEZENA10 + 
                        P_DEZENA11 + P_DEZENA12 + P_DEZENA13 + P_DEZENA14 + P_DEZENA15)/15),2)) 
      /15),0.5),2) >  8.26)
     THEN  
                       --GERAR DEZENAS
             SELECT ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)),
                    ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)),
                    ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)),
                    ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)),
                    ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25)), ROUND(DBMS_RANDOM.VALUE(1,25))
                    INTO P_DEZENA1, P_DEZENA2, P_DEZENA3,
                         P_DEZENA4, P_DEZENA5, P_DEZENA6,
                         P_DEZENA7, P_DEZENA8, P_DEZENA9,
                         P_DEZENA10,P_DEZENA11,P_DEZENA12,
                         P_DEZENA13,P_DEZENA14,P_DEZENA15
               FROM DUAL;
                  
     END IF;    
 
           
     --ORDENA AS DEZENAS
            select *  INTO P_DEZENA1, P_DEZENA2, P_DEZENA3,
                     P_DEZENA4, P_DEZENA5, P_DEZENA6,
                     P_DEZENA7, P_DEZENA8, P_DEZENA9,
                     P_DEZENA10,P_DEZENA11,P_DEZENA12,
                     P_DEZENA13,P_DEZENA14,P_DEZENA15
            from (
        SELECT *
          FROM (
        SELECT VALUE AS DEZENAS, ROWNUM AS ORDEM
         FROM (
        select value
        from
        (
            (
                select
                    P_DEZENA1 v1,
                    P_DEZENA2 v2,
                    P_DEZENA3 v3,
                    P_DEZENA4 v4,
                    P_DEZENA5 v5,
                    P_DEZENA6 v6,
                    P_DEZENA7 v7,
                    P_DEZENA8 v8,
                    P_DEZENA9 v9,
                    P_DEZENA10 v10,
                    P_DEZENA11 v11,
                    P_DEZENA12 v12,
                    P_DEZENA13 v13,
                    P_DEZENA14 v14,
                    P_DEZENA15 v15
                FROM dual
            )
            unpivot
            (
                value
                for value_type in
                    (v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15) 
            ) 
        ) ORDER BY 1
        ) ))
        pivot 
           (SUM(DEZENAS) DEZENA FOR (ORDEM) IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15));
           
           SELECT COUNT(1) INTO P_JACAIU 
       FROM HISTLF LF 
      WHERE DEZENA1=P_DEZENA1
        AND DEZENA2=P_DEZENA2
        AND DEZENA3=P_DEZENA3
        AND DEZENA4=P_DEZENA4
        AND DEZENA5=P_DEZENA5
        AND DEZENA6=P_DEZENA6
        AND DEZENA7=P_DEZENA7
        AND DEZENA8=P_DEZENA8
        AND DEZENA9=P_DEZENA9
        AND DEZENA10=P_DEZENA10
        AND DEZENA11=P_DEZENA11
        AND DEZENA12=P_DEZENA12
        AND DEZENA13=P_DEZENA13
        AND DEZENA14=P_DEZENA14
        AND DEZENA15=P_DEZENA15;
   
  END LOOP; 

     INSERT INTO LOTOFACIL (DEZENA1, DEZENA2, DEZENA3, 
    DEZENA4, DEZENA5, DEZENA6, DEZENA7, DEZENA8, 
    DEZENA9, DEZENA10, DEZENA11, DEZENA12, DEZENA13, 
    DEZENA14, DEZENA15, DTGERACAO)
        VALUES         (
        P_DEZENA1,
P_DEZENA2,
P_DEZENA3,
P_DEZENA4,
P_DEZENA5,
P_DEZENA6,
P_DEZENA7,
P_DEZENA8,
P_DEZENA9,
P_DEZENA10,
P_DEZENA11,
P_DEZENA12,
P_DEZENA13,
P_DEZENA14,
P_DEZENA15, TRUNC(SYSDATE));
        COMMIT;
         
         SELECT NVL(MAX(NROSORTEIO),0) INTO P_NROSORTEIO
           FROM HISTLF G
          WHERE G.DEZENA1=P_DEZENA1
            AND G.DEZENA2=P_DEZENA2
            AND G.DEZENA3=P_DEZENA3
            AND G.DEZENA4=P_DEZENA4
            AND G.DEZENA5=P_DEZENA5
            AND G.DEZENA6=P_DEZENA6
            AND G.DEZENA7=P_DEZENA7
            AND G.DEZENA8=P_DEZENA8
            AND G.DEZENA9=P_DEZENA9
            AND G.DEZENA10=P_DEZENA10
            AND G.DEZENA11=P_DEZENA11
            AND G.DEZENA12=P_DEZENA12
            AND G.DEZENA13=P_DEZENA13
            AND G.DEZENA14=P_DEZENA14
            AND G.DEZENA15=P_DEZENA15
            AND G.NROSORTEIO=1254
            ;
            
        IF P_NROSORTEIO > 0 THEN
        RAISE_APPLICATION_ERROR(-20101,'GANHOU NA LOTO'||P_NROSORTEIO);
        END IF;
          
END;
/
