CREATE OR REPLACE PROCEDURE SANKHYA.STP_QUINA(P_QUEIMA NUMBER,P_QUEIMA2 NUMBER)
AS

    P_VALOR VARCHAR2(100 BYTE);
    P_DEZENA1  NUMBER;
    P_DEZENA2  NUMBER;
    P_DEZENA3  NUMBER;
    P_DEZENA4  NUMBER;
    P_DEZENA5  NUMBER;
    P_MESMADEZENA1      NUMBER;
    P_MESMADEZENA2      NUMBER;
    P_MESMADEZENA3      NUMBER;
    P_MESMADEZENA4      NUMBER;
    P_MESMADEZENA5      NUMBER;
    P_MESMADEZENA12     NUMBER;
    P_MESMADEZENA22     NUMBER;
    P_MESMADEZENA32     NUMBER;
    P_MESMADEZENA42     NUMBER;
    P_MESMADEZENA52     NUMBER;
    P_MESMADEZENA13     NUMBER;
    P_MESMADEZENA23     NUMBER;
    P_MESMADEZENA33     NUMBER;
    P_MESMADEZENA43     NUMBER;
    P_MESMADEZENA53     NUMBER;
    P_MESMADEZENA14     NUMBER;
    P_MESMADEZENA24     NUMBER;
    P_MESMADEZENA34     NUMBER;
    P_MESMADEZENA44     NUMBER;
    P_MESMADEZENA54     NUMBER;
    P_MESMADEZENA15     NUMBER;
    P_MESMADEZENA25     NUMBER;
    P_MESMADEZENA35     NUMBER;
    P_MESMADEZENA45     NUMBER;
    P_MESMADEZENA55     NUMBER;
    P_MESMADEZENA16     NUMBER;
    P_MESMADEZENA26     NUMBER;
    P_MESMADEZENA36     NUMBER;
    P_MESMADEZENA46     NUMBER;
    P_MESMADEZENA56     NUMBER;
    --QUADRANTES
    P_QUADRANTE11       NUMBER;
    P_QUADRANTE12       NUMBER;
    P_QUADRANTE13       NUMBER;
    P_QUADRANTE14       NUMBER;
    P_QUADRANTE15       NUMBER;
    P_QUADRANTE16       NUMBER;
    P_QUADRANTE21       NUMBER;
    P_QUADRANTE22       NUMBER;
    P_QUADRANTE23       NUMBER;
    P_QUADRANTE24       NUMBER;
    P_QUADRANTE25       NUMBER;
    P_QUADRANTE26       NUMBER;
    P_QUADRANTE31       NUMBER;
    P_QUADRANTE32       NUMBER;
    P_QUADRANTE33       NUMBER;
    P_QUADRANTE34       NUMBER;
    P_QUADRANTE35       NUMBER;
    P_QUADRANTE36       NUMBER;
    P_QUADRANTE41       NUMBER;
    P_QUADRANTE42       NUMBER;
    P_QUADRANTE43       NUMBER;
    P_QUADRANTE44       NUMBER;
    P_QUADRANTE45       NUMBER;
    P_QUADRANTE46       NUMBER;
    --SORTEIO
    P_NROSORTEIO        INT;
    TYPE tVETOR IS VARRAY(6) OF NUMBER(2);
    
    V tVETOR; --declara um vetor com o nome V e o tipo tVetor
    i NUMBER := 1;
    j NUMBER;
    k NUMBER;
    qtd NUMBER;


BEGIN

--ERRO SE NÃO INFORMAR O NUMERO CERTO PARA QUEIMAR DEZENA
 IF P_QUEIMA NOT IN (0,1,11,21,31,41,51,61,71) THEN
  RAISE_APPLICATION_ERROR(-20101,'PARA QUEIMAR TEM QUE OS SEGUINTES NÚMEROS VÁLIDOS: (1,11,21,31,41,51)');
 END IF;
 
  IF P_QUEIMA2 NOT IN (0,1,11,21,31,41,51,61,71) THEN
  RAISE_APPLICATION_ERROR(-20101,'PARA QUEIMAR SEQUINDA DEZENA TEM QUE OS SEGUINTES NÚMEROS VÁLIDOS: (1,11,21,31,41,51) E DIFERENTE DA 
  QUEIMA JÁ FEITA');
 END IF;
 
   IF P_QUEIMA2 = P_QUEIMA AND P_QUEIMA <> 0 THEN
  RAISE_APPLICATION_ERROR(-20101,'AS QUEIMAS DEVEM SER DIFERENTES');
 END IF;
  

 --GERAR DEZENA ATÉ GERAR SOMENTE SEM A QUE FOI QUEIMADA
 SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA1
   FROM DUAL;
  WHILE ((P_DEZENA1 >=P_QUEIMA AND P_DEZENA1<=P_QUEIMA+9) AND P_QUEIMA <> 0)
     OR  ((P_DEZENA1 >=P_QUEIMA2 AND P_DEZENA1<=P_QUEIMA2+9) AND P_QUEIMA2 <> 0)
            LOOP
            SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA1
             FROM DUAL;
  END LOOP;
  
  
  SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA2
  FROM DUAL;
   WHILE (P_DEZENA2 >=P_QUEIMA AND P_DEZENA2<=P_QUEIMA+9  AND P_QUEIMA <> 0)
   OR  ((P_DEZENA2 >=P_QUEIMA2 AND P_DEZENA2<=P_QUEIMA2+9) AND P_QUEIMA2 <> 0)
   LOOP
    SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA2
     FROM DUAL;
    
  END LOOP;
  
  SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA3
  FROM DUAL;
   WHILE (P_DEZENA3 >=P_QUEIMA AND P_DEZENA3<=P_QUEIMA+9 AND P_QUEIMA <> 0)
   OR  ((P_DEZENA3 >=P_QUEIMA2 AND P_DEZENA3<=P_QUEIMA2+9) AND P_QUEIMA2 <> 0)
   LOOP
    SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA3
     FROM DUAL;
    
  END LOOP;

  SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA4
  FROM DUAL;
   WHILE(P_DEZENA4 >=P_QUEIMA AND P_DEZENA4<=P_QUEIMA+9  AND P_QUEIMA <> 0)
   OR  ((P_DEZENA4 >=P_QUEIMA2 AND P_DEZENA4<=P_QUEIMA2+9) AND P_QUEIMA2 <> 0)
   LOOP
    SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA4
     FROM DUAL;
    
  END LOOP;
  
  SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA5
  FROM DUAL;
   WHILE (P_DEZENA5 >=P_QUEIMA AND P_DEZENA5<=P_QUEIMA+9)
     OR ((P_DEZENA5 >=P_QUEIMA2 AND P_DEZENA5<=P_QUEIMA2+9) AND P_QUEIMA2 <> 0)  
   LOOP
    SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA5
     FROM DUAL;
    
  END LOOP;
  

  P_MESMADEZENA1:=0;
  P_MESMADEZENA2:=0;
  P_MESMADEZENA3:=0;
  P_MESMADEZENA4:=0;
  P_MESMADEZENA5:=0;
  
  --ORDENAR DEZENAS
     V:= tVETOR(P_DEZENA1,P_DEZENA2,P_DEZENA3,P_DEZENA4,P_DEZENA5);
   
   
   WHILE i <= 5 LOOP /* looping para contagem de tamanho do vetor */
      j := 1;
    qtd := 0;
    
    WHILE j <= 5 LOOP /* looping para a verificação dos valores */
        IF v(i) > v(j) THEN /* verificação se posição x é maior que posição y */
        qtd := qtd + 1; /* contagem para atribuição de valores nas variáveis */
        END IF;
        j := j + 1;
        END LOOP;

        IF (qtd + 1 = 1) THEN /* atribuindo valores as variáveis conforme a contagem */
        P_DEZENA1 := v(i);
        ELSIF (qtd + 1 = 2) THEN
        P_DEZENA2 := v(i);
        ELSIF (qtd + 1 = 3) THEN
        P_DEZENA3 := v(i);
        ELSIF (qtd + 1 = 4) THEN
        P_DEZENA4 := v(i);
        ELSE
        P_DEZENA5 := v(i);
        END IF;

        i := i + 1;

   END LOOP;
   
  --VERIFICAR SE DEZENAS ESTAO COM MENOS DE 10 NUMEROS DE DIFERENCA
    IF RETORNA_INTEIRO((P_DEZENA1 - P_DEZENA2)) < 8 
    THEN P_MESMADEZENA1:=1;
    END IF;
    IF RETORNA_INTEIRO(P_DEZENA1 - P_DEZENA3) < 8 
    THEN P_MESMADEZENA2:=1;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA1 - P_DEZENA4) < 8 
    THEN P_MESMADEZENA3:=1;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA1 - P_DEZENA5) < 8 
    THEN P_MESMADEZENA4:=1;
    END IF; 
    
        IF RETORNA_INTEIRO((P_DEZENA2 - P_DEZENA1)) < 8 
    THEN P_MESMADEZENA12:=1;
    END IF;
    IF RETORNA_INTEIRO(P_DEZENA2 - P_DEZENA3) < 8
    THEN P_MESMADEZENA22:=1;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA2 - P_DEZENA4) < 8 
    THEN P_MESMADEZENA32:=1;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA2 - P_DEZENA5) < 8 
    THEN P_MESMADEZENA42:=1;
    END IF; 
    
    IF RETORNA_INTEIRO((P_DEZENA3 - P_DEZENA1)) < 8 
    THEN P_MESMADEZENA13:=1;
    END IF;
    IF RETORNA_INTEIRO(P_DEZENA3 - P_DEZENA2) < 8 
    THEN P_MESMADEZENA23:=1;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA3 - P_DEZENA4) < 8 
    THEN P_MESMADEZENA33:=1;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA3 - P_DEZENA5) < 8 
    THEN P_MESMADEZENA43:=1;
    END IF; 
    
    IF RETORNA_INTEIRO((P_DEZENA4 - P_DEZENA1)) < 8 
    THEN P_MESMADEZENA14:=1;
    END IF;
    IF RETORNA_INTEIRO(P_DEZENA4 - P_DEZENA2) < 8 
    THEN P_MESMADEZENA24:=1;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA4 - P_DEZENA3) < 8 
    THEN P_MESMADEZENA34:=1;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA4 - P_DEZENA5) < 8 
    THEN P_MESMADEZENA44:=1;
    END IF; 
    
    IF RETORNA_INTEIRO((P_DEZENA5 - P_DEZENA1)) < 8 
    THEN P_MESMADEZENA15:=1;
    END IF;
    IF RETORNA_INTEIRO(P_DEZENA5 - P_DEZENA2) < 8 
    THEN P_MESMADEZENA25:=1;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA5 - P_DEZENA3) < 8 
    THEN P_MESMADEZENA35:=1;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA5 - P_DEZENA4) < 8 
    THEN P_MESMADEZENA45:=1;
    END IF; 
    
    --VERIFICAR SE DEZENAS ESTÃO NO QUADRANTE 1
    SELECT COUNT(1) INTO P_QUADRANTE11                      
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE1 = P_DEZENA1;
     
    SELECT COUNT(1) INTO P_QUADRANTE12
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE1 = P_DEZENA2;
     
    SELECT COUNT(1) INTO P_QUADRANTE13
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE1 = P_DEZENA3;
    
    SELECT COUNT(1) INTO P_QUADRANTE14
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE1 = P_DEZENA4;
     
    SELECT COUNT(1) INTO P_QUADRANTE15
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE1 = P_DEZENA5;
     
     
        --VERIFICAR SE DEZENAS ESTÃO NO QUADRANTE 2
    SELECT COUNT(1) INTO P_QUADRANTE21
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE2 = P_DEZENA1;
     
    SELECT COUNT(1) INTO P_QUADRANTE22
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE2 = P_DEZENA2;
     
    SELECT COUNT(1) INTO P_QUADRANTE23
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE2 = P_DEZENA3;
    
    SELECT COUNT(1) INTO P_QUADRANTE24
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE2 = P_DEZENA4;
     
    SELECT COUNT(1) INTO P_QUADRANTE25
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE2 = P_DEZENA5;
     
     
             --VERIFICAR SE DEZENAS ESTÃO NO QUADRANTE 3
    SELECT COUNT(1) INTO P_QUADRANTE31
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE3 = P_DEZENA1;
     
    SELECT COUNT(1) INTO P_QUADRANTE32
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE3 = P_DEZENA2;
     
    SELECT COUNT(1) INTO P_QUADRANTE33
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE3 = P_DEZENA3;
    
    SELECT COUNT(1) INTO P_QUADRANTE34
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE3 = P_DEZENA4;
     
    SELECT COUNT(1) INTO P_QUADRANTE35
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE3 = P_DEZENA5;
     
     
                  --VERIFICAR SE DEZENAS ESTÃO NO QUADRANTE 4
    SELECT COUNT(1) INTO P_QUADRANTE41
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE4 = P_DEZENA1;
     
    SELECT COUNT(1) INTO P_QUADRANTE42
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE4 = P_DEZENA2;
     
    SELECT COUNT(1) INTO P_QUADRANTE43
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE4 = P_DEZENA3;
    
    SELECT COUNT(1) INTO P_QUADRANTE44
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE4 = P_DEZENA4;
     
    SELECT COUNT(1) INTO P_QUADRANTE45
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE4 = P_DEZENA5;
     
  
  WHILE  (((P_DEZENA1 = P_DEZENA2) OR (P_DEZENA1 = P_DEZENA3) OR (P_DEZENA1 = P_DEZENA4) OR (P_DEZENA1 = P_DEZENA5))
 OR 
   ((P_DEZENA2 = P_DEZENA3) OR (P_DEZENA2 = P_DEZENA4) OR (P_DEZENA2 = P_DEZENA5) )
 OR 
   ((P_DEZENA3 = P_DEZENA4) OR (P_DEZENA3 = P_DEZENA5) )
    OR 
   ((P_DEZENA4 = P_DEZENA5)))
   OR ((P_MESMADEZENA1+P_MESMADEZENA2+P_MESMADEZENA3+P_MESMADEZENA4) > 3
   OR (P_MESMADEZENA12+P_MESMADEZENA22+P_MESMADEZENA32+P_MESMADEZENA42) > 3
   OR (P_MESMADEZENA13+P_MESMADEZENA23+P_MESMADEZENA33+P_MESMADEZENA43) > 3
   OR (P_MESMADEZENA14+P_MESMADEZENA24+P_MESMADEZENA34+P_MESMADEZENA44) > 3 
   OR (P_MESMADEZENA15+P_MESMADEZENA25+P_MESMADEZENA35+P_MESMADEZENA45) > 3) 
   OR --NOT
   (  (P_QUADRANTE11+P_QUADRANTE12+P_QUADRANTE13+P_QUADRANTE14+P_QUADRANTE15) =5
   OR (P_QUADRANTE21+P_QUADRANTE22+P_QUADRANTE23+P_QUADRANTE24+P_QUADRANTE25) =5   
   OR (P_QUADRANTE31+P_QUADRANTE32+P_QUADRANTE33+P_QUADRANTE34+P_QUADRANTE35) =5
   OR (P_QUADRANTE41+P_QUADRANTE42+P_QUADRANTE43+P_QUADRANTE44+P_QUADRANTE45) =5)
   OR ((P_DEZENA1 > 80) OR (P_DEZENA2 >70) OR (P_DEZENA5 <15))
   OR (P_DEZENA1 * P_DEZENA2 * P_DEZENA3 * P_DEZENA4 * P_DEZENA5) < 73000
   OR (P_DEZENA1 * P_DEZENA2 * P_DEZENA3 * P_DEZENA4 * P_DEZENA5) > 1712800000
   OR (POWER((
     (POWER(P_DEZENA1 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5)/5),2) +
      POWER(P_DEZENA2 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5)/5),2) +
      POWER(P_DEZENA3 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5)/5),2) +
      POWER(P_DEZENA4 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5)/5),2) +
      POWER(P_DEZENA5 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5)/5),2)) 
      /5),0.5) < 5 OR POWER((
     (POWER(P_DEZENA1 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5)/5),2) +
      POWER(P_DEZENA2 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5)/5),2) +
      POWER(P_DEZENA3 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5)/5),2) +
      POWER(P_DEZENA4 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5)/5),2) +
      POWER(P_DEZENA5 - ((P_DEZENA1 + P_DEZENA2 + P_DEZENA3 + P_DEZENA4 + P_DEZENA5)/5),2)) 
      /5),0.5)>33)
       
 LOOP  
 SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA1
   FROM DUAL;
  WHILE ((P_DEZENA1 >=P_QUEIMA AND P_DEZENA1<=P_QUEIMA+9) AND P_QUEIMA <> 0)
     OR  ((P_DEZENA1 >=P_QUEIMA2 AND P_DEZENA1<=P_QUEIMA2+9) AND P_QUEIMA2 <> 0)
            LOOP
            SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA1
             FROM DUAL;
  END LOOP;
  
  
  SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA2
  FROM DUAL;
   WHILE (P_DEZENA2 >=P_QUEIMA AND P_DEZENA2<=P_QUEIMA+9  AND P_QUEIMA <> 0)
   OR  ((P_DEZENA2 >=P_QUEIMA2 AND P_DEZENA2<=P_QUEIMA2+9) AND P_QUEIMA2 <> 0)
   LOOP
    SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA2
     FROM DUAL;
    
  END LOOP;
  
  SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA3
  FROM DUAL;
   WHILE (P_DEZENA3 >=P_QUEIMA AND P_DEZENA3<=P_QUEIMA+9 AND P_QUEIMA <> 0)
   OR  ((P_DEZENA3 >=P_QUEIMA2 AND P_DEZENA3<=P_QUEIMA2+9) AND P_QUEIMA2 <> 0)
   LOOP
    SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA3
     FROM DUAL;
    
  END LOOP;

  SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA4
  FROM DUAL;
   WHILE(P_DEZENA4 >=P_QUEIMA AND P_DEZENA4<=P_QUEIMA+9  AND P_QUEIMA <> 0)
   OR  ((P_DEZENA4 >=P_QUEIMA2 AND P_DEZENA4<=P_QUEIMA2+9) AND P_QUEIMA2 <> 0)
   LOOP
    SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA4
     FROM DUAL;
    
  END LOOP;
  
  SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA5
  FROM DUAL;
   WHILE (P_DEZENA5 >=P_QUEIMA AND P_DEZENA5<=P_QUEIMA+9)
     OR ((P_DEZENA5 >=P_QUEIMA2 AND P_DEZENA5<=P_QUEIMA2+9) AND P_QUEIMA2 <> 0)  
   LOOP
    SELECT ROUND(DBMS_RANDOM.VALUE(1,80)) INTO P_DEZENA5
     FROM DUAL;
    
  END LOOP;
  
    
                
    IF RETORNA_INTEIRO((P_DEZENA1 - P_DEZENA2)) < 10 
    THEN P_MESMADEZENA1:=1;
    ELSE P_MESMADEZENA1:=0;
    END IF;
    IF RETORNA_INTEIRO(P_DEZENA1 - P_DEZENA3) < 10 
    THEN P_MESMADEZENA2:=1;
    ELSE P_MESMADEZENA2:=0;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA1 - P_DEZENA4) < 10 
    THEN P_MESMADEZENA3:=1;
    ELSE P_MESMADEZENA3:=0;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA1 - P_DEZENA5) < 10 
    THEN P_MESMADEZENA4:=1;
    ELSE P_MESMADEZENA4:=0;
    END IF; 

    
    IF RETORNA_INTEIRO((P_DEZENA2 - P_DEZENA1)) < 10 
    THEN P_MESMADEZENA12:=1;
    ELSE P_MESMADEZENA12:=0;
    END IF;
    IF RETORNA_INTEIRO(P_DEZENA2 - P_DEZENA3) < 10 
    THEN P_MESMADEZENA22:=1;
    ELSE P_MESMADEZENA22:=0;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA2 - P_DEZENA4) < 10 
    THEN P_MESMADEZENA32:=1;
    ELSE P_MESMADEZENA32:=0;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA2 - P_DEZENA5) < 10 
    THEN P_MESMADEZENA42:=1;
    ELSE P_MESMADEZENA42:=0;
    END IF; 

    
    IF RETORNA_INTEIRO((P_DEZENA3 - P_DEZENA1)) < 10 
    THEN P_MESMADEZENA13:=1;
    ELSE P_MESMADEZENA13:=0;
    END IF;
    IF RETORNA_INTEIRO(P_DEZENA3 - P_DEZENA2) < 10 
    THEN P_MESMADEZENA23:=1;
    ELSE P_MESMADEZENA23:=0;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA3 - P_DEZENA4) < 10 
    THEN P_MESMADEZENA33:=1;
    ELSE P_MESMADEZENA33:=0;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA3 - P_DEZENA5) < 10 
    THEN P_MESMADEZENA43:=1;
    ELSE P_MESMADEZENA43:=0;
    END IF; 

    
    IF RETORNA_INTEIRO((P_DEZENA4 - P_DEZENA1)) < 10 
    THEN P_MESMADEZENA14:=1;
    ELSE P_MESMADEZENA14:=0;
    END IF;
    IF RETORNA_INTEIRO(P_DEZENA4 - P_DEZENA2) < 10 
    THEN P_MESMADEZENA24:=1;
    ELSE P_MESMADEZENA24:=0;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA4 - P_DEZENA3) < 10 
    THEN P_MESMADEZENA34:=1;
    ELSE P_MESMADEZENA34:=0;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA4 - P_DEZENA5) < 10 
    THEN P_MESMADEZENA44:=1;
    ELSE P_MESMADEZENA44:=0;
    END IF; 

    
    IF RETORNA_INTEIRO((P_DEZENA5 - P_DEZENA1)) < 10 
    THEN P_MESMADEZENA15:=1;
    ELSE P_MESMADEZENA15:=0;
    END IF;
    IF RETORNA_INTEIRO(P_DEZENA5 - P_DEZENA2) < 10 
    THEN P_MESMADEZENA25:=1;
    ELSE P_MESMADEZENA25:=0;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA5 - P_DEZENA3) < 10 
    THEN P_MESMADEZENA35:=1;
    ELSE P_MESMADEZENA35:=0;
    END IF; 
    IF RETORNA_INTEIRO(P_DEZENA5 - P_DEZENA4) < 10 
    THEN P_MESMADEZENA45:=1;
    ELSE P_MESMADEZENA45:=0;
    END IF; 

   

       --VERIFICAR SE DEZENAS ESTÃO NO QUADRANTE 1
    SELECT COUNT(1) INTO P_QUADRANTE11                      
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE1 = P_DEZENA1;
     
    SELECT COUNT(1) INTO P_QUADRANTE12
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE1 = P_DEZENA2;
     
    SELECT COUNT(1) INTO P_QUADRANTE13
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE1 = P_DEZENA3;
    
    SELECT COUNT(1) INTO P_QUADRANTE14
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE1 = P_DEZENA4;
     
    SELECT COUNT(1) INTO P_QUADRANTE15
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE1 = P_DEZENA5;
     
     
        --VERIFICAR SE DEZENAS ESTÃO NO QUADRANTE 2
    SELECT COUNT(1) INTO P_QUADRANTE21
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE2 = P_DEZENA1;
     
    SELECT COUNT(1) INTO P_QUADRANTE22
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE2 = P_DEZENA2;
     
    SELECT COUNT(1) INTO P_QUADRANTE23
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE2 = P_DEZENA3;
    
    SELECT COUNT(1) INTO P_QUADRANTE24
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE2 = P_DEZENA4;
     
    SELECT COUNT(1) INTO P_QUADRANTE25
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE2 = P_DEZENA5;
     
     
             --VERIFICAR SE DEZENAS ESTÃO NO QUADRANTE 3
    SELECT COUNT(1) INTO P_QUADRANTE31
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE3 = P_DEZENA1;
     
    SELECT COUNT(1) INTO P_QUADRANTE32
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE3 = P_DEZENA2;
     
    SELECT COUNT(1) INTO P_QUADRANTE33
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE3 = P_DEZENA3;
    
    SELECT COUNT(1) INTO P_QUADRANTE34
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE3 = P_DEZENA4;
     
    SELECT COUNT(1) INTO P_QUADRANTE35
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE3 = P_DEZENA5;
     
     
                  --VERIFICAR SE DEZENAS ESTÃO NO QUADRANTE 4
    SELECT COUNT(1) INTO P_QUADRANTE41
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE4 = P_DEZENA1;
     
    SELECT COUNT(1) INTO P_QUADRANTE42
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE4 = P_DEZENA2;
     
    SELECT COUNT(1) INTO P_QUADRANTE43
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE4 = P_DEZENA3;
    
    SELECT COUNT(1) INTO P_QUADRANTE44
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE4 = P_DEZENA4;
     
    SELECT COUNT(1) INTO P_QUADRANTE45
      FROM QUADRANTEQUINA Q
     WHERE Q.QUADRANTE4 = P_DEZENA5;
     
     
           i := 1;
           j :=0;
           k :=0;
           qtd :=0;
      --ORDENAR DEZENAS
     V:= tVETOR(P_DEZENA1,P_DEZENA2,P_DEZENA3,P_DEZENA4,P_DEZENA5);
  
 WHILE i <= 5 LOOP /* looping para contagem de tamanho do vetor */
      j := 1;
    qtd := 0;
    
    WHILE j <= 5 LOOP /* looping para a verificação dos valores */
        IF v(i) > v(j) THEN /* verificação se posição x é maior que posição y */
        qtd := qtd + 1; /* contagem para atribuição de valores nas variáveis */
        END IF;
        j := j + 1;
        END LOOP;

        IF (qtd + 1 = 1) THEN /* atribuindo valores as variáveis conforme a contagem */
        P_DEZENA1 := v(i);
        ELSIF (qtd + 1 = 2) THEN
        P_DEZENA2 := v(i);
        ELSIF (qtd + 1 = 3) THEN
        P_DEZENA3 := v(i);
        ELSIF (qtd + 1 = 4) THEN
        P_DEZENA4 := v(i);
        ELSE
        P_DEZENA5 := v(i);
        END IF;

        i := i + 1;

   END LOOP;
   
  END LOOP; 
    
  
--            i := 1;
--           j :=0;
--           k :=0;
--           qtd :=0;
--    --ORDENAR DEZENAS
--     V:= tVETOR(P_DEZENA1,P_DEZENA2,P_DEZENA3,P_DEZENA4,P_DEZENA5,P_DEZENA6);
--   
--   
--   WHILE i <= 6 LOOP /* looping para contagem de tamanho do vetor */
--      j := 1;
--    qtd := 0;
--    
--    WHILE j <= 6 LOOP /* looping para a verificação dos valores */
--        IF v(i) > v(j) THEN /* verificação se posição x é maior que posição y */
--        qtd := qtd + 1; /* contagem para atribuição de valores nas variáveis */
--        END IF;
--        j := j + 1;
--        END LOOP;
--
--        IF (qtd + 1 = 1) THEN /* atribuindo valores as variáveis conforme a contagem */
--        P_DEZENA1 := v(i);
--        ELSIF (qtd + 1 = 2) THEN
--        P_DEZENA2 := v(i);
--        ELSIF (qtd + 1 = 3) THEN
--        P_DEZENA3 := v(i);
--        ELSIF (qtd + 1 = 4) THEN
--        P_DEZENA4 := v(i);
--        ELSIF (qtd + 1 = 5) THEN
--        P_DEZENA5 := v(i);
--        ELSE
--        P_DEZENA6 := v(i);
--        END IF;
--
--        i := i + 1;
--
--   END LOOP;
  
   
     INSERT INTO QUINA (DEZENA1,DEZENA2,DEZENA3,DEZENA4,DEZENA5)
        VALUES         (P_DEZENA1,P_DEZENA2,P_DEZENA3,P_DEZENA4,P_DEZENA5);
--        COMMIT;
--         
--         SELECT NVL(MAX(NROSORTEIO),0) INTO P_NROSORTEIO
--           FROM HISTQUINA G
--          WHERE G.DEZENA1=P_DEZENA1
--            AND G.DEZENA2=P_DEZENA2
--            AND G.DEZENA3=P_DEZENA3
--            AND G.DEZENA4=P_DEZENA4
--            AND G.DEZENA5=P_DEZENA5
--            --AND G.NROSORTEIO=3848
--            ;
--            
--        IF P_NROSORTEIO > 0 THEN
--        RAISE_APPLICATION_ERROR(-20101,'GANHOU NA QUINA'||P_NROSORTEIO);
--        END IF;
          
END;
/
